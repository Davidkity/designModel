适配器模式

思想：
        把一个类的接口换成客户端所期待的另一种接口，从而使原本接口不匹配而无法一起
    工作的两个类能够在一起工作。

适配器的组成部分：
    源（Adaptee）：需要被适配的对象或类型，先当与插头。
    适配器（Adapter）：连接目标和源的中间对象，相当于转接头。
    目标（Target）：期待得到的目标，相当于插座。

适配器模式：
    类适配器模式：
            Adaptee类想得到Target接口的方法使用权；则需要把Adaptee与Target链接起来，
        可以让Adapter继承Adaptee并实现Target接口，这样就可以通过new Adapter()创建
        一个Adaptee对象，使其能够是由Target接口。
    对象适配器模式：
            不需要继承Adaptee类，直接把把Adaptee封装到Adapter类中，然后实现Target接口
         就可以。在Adapter中含有两种类型的方法。
    接口适配器模式（缺省适配器模式）：
        思想：为一个接口提供一个缺省的实现（最好弄成抽象类，让其不能实例化对象），
            让给让子类从这个缺省实现进行扩展，而不必从原有接口进行扩展。

类适配器与对象适配器的区别：
    类适配器使用的是继承的方式，直接继承了Adaptee，所以无法对Apaptee的子类进行适配。
    对象适配器使用的是组合的方式，所以Adaptee及其子类都可以被适配；另外对象适配器
   对于增加一些新行为非常方便，而且新增的行为同时适用于所有的源。

